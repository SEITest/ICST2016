1,com.github.zafarkhaja.semver.expr.ExpressionParserTest.shouldParseLessOrEqualComparisonRange
2,com.github.zafarkhaja.semver.expr.ExpressionParserTest.shouldParseHyphenRange
3,com.github.zafarkhaja.semver.expr.ExpressionParserTest.shouldParseWildcardRange
4,com.github.zafarkhaja.semver.expr.ExpressionParserTest.shouldParseLessComparisonRange
5,com.github.zafarkhaja.semver.expr.ExpressionParserTest.shouldParsePartialVersionRange
6,com.github.zafarkhaja.semver.expr.ExpressionParserTest.shouldParseNotExpression
7,com.github.zafarkhaja.semver.expr.ExpressionParserTest.shouldParseGreaterComparisonRange
8,com.github.zafarkhaja.semver.expr.ExpressionParserTest.shouldParseCaretRange
9,com.github.zafarkhaja.semver.expr.ExpressionParserTest.shouldRespectPrecedenceWhenUsedWithParentheses
10,com.github.zafarkhaja.semver.expr.ExpressionParserTest.shouldParseMultipleRangesJoinedWithOr
11,com.github.zafarkhaja.semver.expr.ExpressionParserTest.shouldParseTildeRange
12,com.github.zafarkhaja.semver.expr.ExpressionParserTest.shouldParseMultipleRangesJoinedWithAnd
13,com.github.zafarkhaja.semver.expr.ExpressionParserTest.shouldParseExpressionWithMultipleParentheses
14,com.github.zafarkhaja.semver.expr.ExpressionParserTest.shouldParseEqualComparisonRangeIfOnlyFullVersionGiven
15,com.github.zafarkhaja.semver.expr.ExpressionParserTest.shouldParseGreaterOrEqualComparisonRange
16,com.github.zafarkhaja.semver.expr.ExpressionParserTest.shouldParseEqualComparisonRange
17,com.github.zafarkhaja.semver.expr.ExpressionParserTest.shouldParseNotEqualComparisonRange
18,com.github.zafarkhaja.semver.expr.ExpressionParserTest.shouldParseComplexExpressions
19,com.github.zafarkhaja.semver.expr.ExpressionParserTest.shouldParseParenthesizedExpression
20,com.github.zafarkhaja.semver.util.StreamTest.shouldLookaheadWithoutConsuming
21,com.github.zafarkhaja.semver.util.StreamTest.shouldNotReturnRealElementsArray
22,com.github.zafarkhaja.semver.util.StreamTest.shouldKeepTrackOfCurrentOffset
23,com.github.zafarkhaja.semver.util.StreamTest.shouldBeBackedByArray
24,com.github.zafarkhaja.semver.util.StreamTest.shouldCheckIfLookaheadIsOfExpectedTypes
25,com.github.zafarkhaja.semver.util.StreamTest.shouldImplementIterable
26,com.github.zafarkhaja.semver.util.StreamTest.shouldLookaheadArbitraryNumberOfElements
27,com.github.zafarkhaja.semver.util.StreamTest.shouldStopPushingBackWhenThereAreNoElements
28,com.github.zafarkhaja.semver.util.StreamTest.shouldConsumeElementsOneByOne
29,com.github.zafarkhaja.semver.util.StreamTest.shouldPushBackOneElementAtATime
30,com.github.zafarkhaja.semver.util.StreamTest.shouldRaiseErrorWhenUnexpectedElementConsumed
31,com.github.zafarkhaja.semver.util.StreamTest.shouldCheckIfElementOfExpectedTypesExistUntilGivenPosition
32,com.github.zafarkhaja.semver.util.StreamTest.shouldCheckIfElementOfExpectedTypesExistBeforeGivenType
33,com.github.zafarkhaja.semver.util.StreamTest.shouldReturnArrayOfElementsThatAreLeftInStream
34,com.github.zafarkhaja.semver.expr.AndTest.shouldCheckIfBothExpressionsEvaluateToTrue
35,com.github.zafarkhaja.semver.MetadataVersionTest$ToStringMethodTest.shouldReturnStringRepresentation
36,com.github.zafarkhaja.semver.MetadataVersionTest$HashCodeMethodTest.shouldReturnSameHashCodeIfVersionsAreEqual
37,com.github.zafarkhaja.semver.MetadataVersionTest$EqualsMethodTest.shouldBeReflexive
38,com.github.zafarkhaja.semver.MetadataVersionTest$EqualsMethodTest.shouldBeSymmetric
39,com.github.zafarkhaja.semver.MetadataVersionTest$EqualsMethodTest.shouldReturnFalseIfOtherVersionIsOfDifferentType
40,com.github.zafarkhaja.semver.MetadataVersionTest$EqualsMethodTest.shouldBeTransitive
41,com.github.zafarkhaja.semver.MetadataVersionTest$EqualsMethodTest.shouldReturnFalseIfOtherVersionIsNull
42,com.github.zafarkhaja.semver.MetadataVersionTest$EqualsMethodTest.shouldBeConsistent
43,com.github.zafarkhaja.semver.MetadataVersionTest$NullMetadataVersionTest.shouldThrowNullPointerExceptionIfIncremented
44,com.github.zafarkhaja.semver.MetadataVersionTest$NullMetadataVersionTest.shouldReturnZeroWhenComparedToNullMetadataVersion
45,com.github.zafarkhaja.semver.MetadataVersionTest$NullMetadataVersionTest.shouldReturnPositiveWhenComparedToNonNullMetadataVersion
46,com.github.zafarkhaja.semver.MetadataVersionTest$NullMetadataVersionTest.shouldBeEqualOnlyToItsType
47,com.github.zafarkhaja.semver.MetadataVersionTest$NullMetadataVersionTest.shouldReturnEmptyStringOnToString
48,com.github.zafarkhaja.semver.MetadataVersionTest$NullMetadataVersionTest.shouldReturnZeroOnHashCode
49,com.github.zafarkhaja.semver.MetadataVersionTest$CoreFunctionalityTest.shouldOverrideEqualsMethod
50,com.github.zafarkhaja.semver.MetadataVersionTest$CoreFunctionalityTest.shouldComapareDigitsOnlyIdentifiersNumerically
51,com.github.zafarkhaja.semver.MetadataVersionTest$CoreFunctionalityTest.shouldProvideIncrementMethod
52,com.github.zafarkhaja.semver.MetadataVersionTest$CoreFunctionalityTest.shouldReturnNegativeWhenComparedToNullMetadataVersion
53,com.github.zafarkhaja.semver.MetadataVersionTest$CoreFunctionalityTest.shouldCompareMixedIdentifiersLexicallyInAsciiSortOrder
54,com.github.zafarkhaja.semver.MetadataVersionTest$CoreFunctionalityTest.shouldCompareIdentifiersCountIfCommonIdentifiersAreEqual
55,com.github.zafarkhaja.semver.MetadataVersionTest$CoreFunctionalityTest.shouldAppendOneAsLastIdentifierIfLastOneIsAlphaNumericWhenIncrementing
56,com.github.zafarkhaja.semver.MetadataVersionTest$CoreFunctionalityTest.shouldBeImmutable
57,com.github.zafarkhaja.semver.MetadataVersionTest$CoreFunctionalityTest.mustCompareEachIdentifierSeparately
58,com.github.zafarkhaja.semver.expr.LessOrEqualTest.shouldCheckIfVersionIsLessThanOrEqualToParsedVersion
59,com.github.zafarkhaja.semver.expr.LexerTest.shouldRaiseErrorOnIllegalCharacter
60,com.github.zafarkhaja.semver.expr.LexerTest.shouldEndWithEol
61,com.github.zafarkhaja.semver.expr.LexerTest.shouldSkipWhitespaces
62,com.github.zafarkhaja.semver.expr.LexerTest.shouldTokenizeVersionString
63,com.github.zafarkhaja.semver.expr.EqualTest.shouldCheckIfVersionIsEqualToParsedVersion
64,com.github.zafarkhaja.semver.VersionParserTest.shouldParseValidSemVer
65,com.github.zafarkhaja.semver.VersionParserTest.shouldRaiseErrorForEmptyBuildIdentifier
66,com.github.zafarkhaja.semver.VersionParserTest.shouldParsePreReleaseVersion
67,com.github.zafarkhaja.semver.VersionParserTest.shouldRaiseErrorIfNumericIdentifierHasLeadingZeroes
68,com.github.zafarkhaja.semver.VersionParserTest.shouldNotAllowDigitsInPreReleaseVersion
69,com.github.zafarkhaja.semver.VersionParserTest.shouldRaiseErrorForIllegalInputString
70,com.github.zafarkhaja.semver.VersionParserTest.shouldParseNormalVersion
71,com.github.zafarkhaja.semver.VersionParserTest.shouldAllowDigitsInBuildMetadata
72,com.github.zafarkhaja.semver.VersionParserTest.shouldParseBuildMetadata
73,com.github.zafarkhaja.semver.VersionParserTest.shouldRaiseErrorForEmptyPreReleaseIdentifier
74,com.github.zafarkhaja.semver.VersionParserCharTypeTest.shouldBeMatchedByDot
75,com.github.zafarkhaja.semver.VersionParserCharTypeTest.shouldBeMatchedByEol
76,com.github.zafarkhaja.semver.VersionParserCharTypeTest.shouldBeMatchedByIllegal
77,com.github.zafarkhaja.semver.VersionParserCharTypeTest.shouldBeMatchedByPlus
78,com.github.zafarkhaja.semver.VersionParserCharTypeTest.shouldBeMatchedByDigit
79,com.github.zafarkhaja.semver.VersionParserCharTypeTest.shouldReturnCharTypeForCharacter
80,com.github.zafarkhaja.semver.VersionParserCharTypeTest.shouldBeMatchedByHyphen
81,com.github.zafarkhaja.semver.VersionParserCharTypeTest.shouldBeMatchedByLetter
82,com.github.zafarkhaja.semver.expr.LexerTokenTest$HashCodeMethodTest.shouldReturnSameHashCodeIfTokensAreEqual
83,com.github.zafarkhaja.semver.expr.LexerTokenTest$EqualsMethodTest.shouldReturnFalseIfLexemesAreDifferent
84,com.github.zafarkhaja.semver.expr.LexerTokenTest$EqualsMethodTest.shouldReturnFalseIfPositionsAreDifferent
85,com.github.zafarkhaja.semver.expr.LexerTokenTest$EqualsMethodTest.shouldBeReflexive
86,com.github.zafarkhaja.semver.expr.LexerTokenTest$EqualsMethodTest.shouldBeSymmetric
87,com.github.zafarkhaja.semver.expr.LexerTokenTest$EqualsMethodTest.shouldReturnFalseIfTypesAreDifferent
88,com.github.zafarkhaja.semver.expr.LexerTokenTest$EqualsMethodTest.shouldReturnFalseIfOtherVersionIsOfDifferentType
89,com.github.zafarkhaja.semver.expr.LexerTokenTest$EqualsMethodTest.shouldBeTransitive
90,com.github.zafarkhaja.semver.expr.LexerTokenTest$EqualsMethodTest.shouldReturnFalseIfOtherVersionIsNull
91,com.github.zafarkhaja.semver.expr.LexerTokenTest$EqualsMethodTest.shouldBeConsistent
92,com.github.zafarkhaja.semver.expr.NotEqualTest.shouldCheckIfVersionIsNotEqualToParsedVersion
93,com.github.zafarkhaja.semver.expr.GreaterTest.shouldCheckIfVersionIsGreaterThanParsedVersion
94,com.github.zafarkhaja.semver.expr.LessTest.shouldCheckIfVersionIsLessThanParsedVersion
95,com.github.zafarkhaja.semver.expr.OrTest.shouldCheckIfOneOfTwoExpressionsEvaluateToTrue
96,com.github.zafarkhaja.semver.expr.ParserErrorHandlingTest.shouldCorrectlyHandleParseErrors[1)]
97,com.github.zafarkhaja.semver.expr.ParserErrorHandlingTest.shouldCorrectlyHandleParseErrors[(&gt;1.0.1]
98,com.github.zafarkhaja.semver.expr.ParserErrorHandlingTest.shouldCorrectlyHandleParseErrors[((&gt;=1 &amp; &lt;2)]
99,com.github.zafarkhaja.semver.expr.ParserErrorHandlingTest.shouldCorrectlyHandleParseErrors[&gt;=1.0.0 &amp;]
100,com.github.zafarkhaja.semver.expr.ParserErrorHandlingTest.shouldCorrectlyHandleParseErrors[(&gt;2.0 |)]
101,com.github.zafarkhaja.semver.expr.ParserErrorHandlingTest.shouldCorrectlyHandleParseErrors[&amp; 1.2]
102,com.github.zafarkhaja.semver.expr.NotTest.shouldRevertBooleanResultOfExpression
103,com.github.zafarkhaja.semver.ParserErrorHandlingTest.shouldCorrectlyHandleParseErrors[1]
104,com.github.zafarkhaja.semver.ParserErrorHandlingTest.shouldCorrectlyHandleParseErrors[1 ]
105,com.github.zafarkhaja.semver.ParserErrorHandlingTest.shouldCorrectlyHandleParseErrors[1.]
106,com.github.zafarkhaja.semver.ParserErrorHandlingTest.shouldCorrectlyHandleParseErrors[1.2]
107,com.github.zafarkhaja.semver.ParserErrorHandlingTest.shouldCorrectlyHandleParseErrors[1.2.]
108,com.github.zafarkhaja.semver.ParserErrorHandlingTest.shouldCorrectlyHandleParseErrors[a.b.c]
109,com.github.zafarkhaja.semver.ParserErrorHandlingTest.shouldCorrectlyHandleParseErrors[1.b.c]
110,com.github.zafarkhaja.semver.ParserErrorHandlingTest.shouldCorrectlyHandleParseErrors[1.2.c]
111,com.github.zafarkhaja.semver.ParserErrorHandlingTest.shouldCorrectlyHandleParseErrors[!.2.3]
112,com.github.zafarkhaja.semver.ParserErrorHandlingTest.shouldCorrectlyHandleParseErrors[1.!.3]
113,com.github.zafarkhaja.semver.ParserErrorHandlingTest.shouldCorrectlyHandleParseErrors[1.2.!]
114,com.github.zafarkhaja.semver.ParserErrorHandlingTest.shouldCorrectlyHandleParseErrors[v1.2.3]
115,com.github.zafarkhaja.semver.ParserErrorHandlingTest.shouldCorrectlyHandleParseErrors[1.2.3-]
116,com.github.zafarkhaja.semver.ParserErrorHandlingTest.shouldCorrectlyHandleParseErrors[1.2. 3]
117,com.github.zafarkhaja.semver.ParserErrorHandlingTest.shouldCorrectlyHandleParseErrors[1.2.3=alpha]
118,com.github.zafarkhaja.semver.ParserErrorHandlingTest.shouldCorrectlyHandleParseErrors[1.2.3~beta]
119,com.github.zafarkhaja.semver.ParserErrorHandlingTest.shouldCorrectlyHandleParseErrors[1.2.3-be$ta]
120,com.github.zafarkhaja.semver.ParserErrorHandlingTest.shouldCorrectlyHandleParseErrors[1.2.3+b1+b2]
121,com.github.zafarkhaja.semver.ParserErrorHandlingTest.shouldCorrectlyHandleParseErrors[1.2.3-rc!]
122,com.github.zafarkhaja.semver.ParserErrorHandlingTest.shouldCorrectlyHandleParseErrors[1.2.3-+]
123,com.github.zafarkhaja.semver.ParserErrorHandlingTest.shouldCorrectlyHandleParseErrors[1.2.3-@]
124,com.github.zafarkhaja.semver.ParserErrorHandlingTest.shouldCorrectlyHandleParseErrors[1.2.3+@]
125,com.github.zafarkhaja.semver.ParserErrorHandlingTest.shouldCorrectlyHandleParseErrors[1.2.3-rc.]
126,com.github.zafarkhaja.semver.ParserErrorHandlingTest.shouldCorrectlyHandleParseErrors[1.2.3+b.]
127,com.github.zafarkhaja.semver.ParserErrorHandlingTest.shouldCorrectlyHandleParseErrors[1.2.3-b.+b]
128,com.github.zafarkhaja.semver.ParserErrorHandlingTest.shouldCorrectlyHandleParseErrors[1.2.3-rc..]
129,com.github.zafarkhaja.semver.ParserErrorHandlingTest.shouldCorrectlyHandleParseErrors[1.2.3-a+b..]
130,com.github.zafarkhaja.semver.expr.CompositeExpressionTest.shouldSupportLessOrEqualExpression
131,com.github.zafarkhaja.semver.expr.CompositeExpressionTest.shouldSupportEqualExpression
132,com.github.zafarkhaja.semver.expr.CompositeExpressionTest.shouldSupportComplexExpressions
133,com.github.zafarkhaja.semver.expr.CompositeExpressionTest.shouldSupportAndExpression
134,com.github.zafarkhaja.semver.expr.CompositeExpressionTest.shouldSupportOrExpression
135,com.github.zafarkhaja.semver.expr.CompositeExpressionTest.shouldSupportGreaterOrEqualExpression
136,com.github.zafarkhaja.semver.expr.CompositeExpressionTest.shouldSupportLessExpression
137,com.github.zafarkhaja.semver.expr.CompositeExpressionTest.shouldSupportNotExpression
138,com.github.zafarkhaja.semver.expr.CompositeExpressionTest.shouldSupportNotEqualExpression
139,com.github.zafarkhaja.semver.expr.CompositeExpressionTest.shouldSupportGreaterExpression
140,com.github.zafarkhaja.semver.NormalVersionTest$ToStringMethodTest.shouldReturnStringRepresentation
141,com.github.zafarkhaja.semver.NormalVersionTest$HashCodeMethodTest.shouldReturnSameHashCodeIfVersionsAreEqual
142,com.github.zafarkhaja.semver.NormalVersionTest$EqualsMethodTest.shouldBeReflexive
143,com.github.zafarkhaja.semver.NormalVersionTest$EqualsMethodTest.shouldBeSymmetric
144,com.github.zafarkhaja.semver.NormalVersionTest$EqualsMethodTest.shouldReturnFalseIfOtherVersionIsOfDifferentType
145,com.github.zafarkhaja.semver.NormalVersionTest$EqualsMethodTest.shouldBeTransitive
146,com.github.zafarkhaja.semver.NormalVersionTest$EqualsMethodTest.shouldReturnFalseIfOtherVersionIsNull
147,com.github.zafarkhaja.semver.NormalVersionTest$EqualsMethodTest.shouldBeConsistent
148,com.github.zafarkhaja.semver.NormalVersionTest$CoreFunctionalityTest.shouldOverrideEqualsMethod
149,com.github.zafarkhaja.semver.NormalVersionTest$CoreFunctionalityTest.mustConsistOfMajorMinorAndPatchVersions
150,com.github.zafarkhaja.semver.NormalVersionTest$CoreFunctionalityTest.mustIncreaseEachElementNumericallyByIncrementsOfOne
151,com.github.zafarkhaja.semver.NormalVersionTest$CoreFunctionalityTest.shouldAcceptOnlyNonNegativeMajorMinorAndPatchVersions
152,com.github.zafarkhaja.semver.NormalVersionTest$CoreFunctionalityTest.mustResetPatchToZeroWhenMinorIsIncremented
153,com.github.zafarkhaja.semver.NormalVersionTest$CoreFunctionalityTest.shoudBeImmutable
154,com.github.zafarkhaja.semver.NormalVersionTest$CoreFunctionalityTest.mustCompareMajorMinorAndPatchNumerically
155,com.github.zafarkhaja.semver.NormalVersionTest$CoreFunctionalityTest.mustResetMinorAndPatchToZeroWhenMajorIsIncremented
156,com.github.zafarkhaja.semver.NormalVersionTest$CoreFunctionalityTest.mustTakeTheFormOfXDotYDotZWhereXyzAreNonNegativeIntegers
157,com.github.zafarkhaja.semver.expr.GreaterOrEqualTest.shouldCheckIfVersionIsGreaterThanOrEqualToParsedVersion
158,com.github.zafarkhaja.semver.VersionTest$BuildAwareOrderTest.shouldCorrectlyCompareAllVersionsWithBuildMetadata
159,com.github.zafarkhaja.semver.VersionTest$BuilderTest.shouldBuildVersionInSteps
160,com.github.zafarkhaja.semver.VersionTest$BuilderTest.shouldBuildVersionWithPreReleaseVersionAndBuildMetadata
161,com.github.zafarkhaja.semver.VersionTest$BuilderTest.shouldBuildVersionWithPreReleaseVersion
162,com.github.zafarkhaja.semver.VersionTest$BuilderTest.shouldBuildVersionWithBuildMetadata
163,com.github.zafarkhaja.semver.VersionTest$BuilderTest.shouldBuildVersionFromNormalVersion
164,com.github.zafarkhaja.semver.VersionTest$BuilderTest.shouldImplementFluentInterface
165,com.github.zafarkhaja.semver.VersionTest$ToStringMethodTest.shouldReturnStringRepresentation
166,com.github.zafarkhaja.semver.VersionTest$HashCodeMethodTest.shouldReturnSameHashCodeIfVersionsAreEqual
167,com.github.zafarkhaja.semver.VersionTest$EqualsMethodTest.shouldBeReflexive
168,com.github.zafarkhaja.semver.VersionTest$EqualsMethodTest.shouldBeSymmetric
169,com.github.zafarkhaja.semver.VersionTest$EqualsMethodTest.shouldIgnoreBuildMetadataWhenCheckingForEquality
170,com.github.zafarkhaja.semver.VersionTest$EqualsMethodTest.shouldReturnFalseIfOtherVersionIsOfDifferentType
171,com.github.zafarkhaja.semver.VersionTest$EqualsMethodTest.shouldBeTransitive
172,com.github.zafarkhaja.semver.VersionTest$EqualsMethodTest.shouldReturnFalseIfOtherVersionIsNull
173,com.github.zafarkhaja.semver.VersionTest$EqualsMethodTest.shouldBeConsistent
174,com.github.zafarkhaja.semver.VersionTest$CoreFunctionalityTest.shouldOverrideEqualsMethod
175,com.github.zafarkhaja.semver.VersionTest$CoreFunctionalityTest.shouldHaveStaticFactoryMethod
176,com.github.zafarkhaja.semver.VersionTest$CoreFunctionalityTest.shouldProvideSetBuildMetadataMethod
177,com.github.zafarkhaja.semver.VersionTest$CoreFunctionalityTest.shouldHaveLessThanOrEqualToMethodReturningBoolean
178,com.github.zafarkhaja.semver.VersionTest$CoreFunctionalityTest.shouldIncrementPatchVersionWithPreReleaseIfProvided
179,com.github.zafarkhaja.semver.VersionTest$CoreFunctionalityTest.shouldProvideIncrementPreReleaseVersionMethod
180,com.github.zafarkhaja.semver.VersionTest$CoreFunctionalityTest.shouldIgnoreBuildMetadataWhenDeterminingVersionPrecedence
181,com.github.zafarkhaja.semver.VersionTest$CoreFunctionalityTest.mayHaveBuildFollowingPatchOrPreReleaseAppendedWithPlus
182,com.github.zafarkhaja.semver.VersionTest$CoreFunctionalityTest.shouldBeAbleToCompareWithoutIgnoringBuildMetadata
183,com.github.zafarkhaja.semver.VersionTest$CoreFunctionalityTest.shouldHaveGreaterThanMethodReturningBoolean
184,com.github.zafarkhaja.semver.VersionTest$CoreFunctionalityTest.shouldProvideSetPreReleaseVersionMethod
185,com.github.zafarkhaja.semver.VersionTest$CoreFunctionalityTest.shouldProvideIncrementMajorVersionMethod
186,com.github.zafarkhaja.semver.VersionTest$CoreFunctionalityTest.shouldProvideIncrementMinorVersionMethod
187,com.github.zafarkhaja.semver.VersionTest$CoreFunctionalityTest.shouldCheckIfVersionSatisfiesExpression
188,com.github.zafarkhaja.semver.VersionTest$CoreFunctionalityTest.shouldIncrementMajorVersionWithPreReleaseIfProvided
189,com.github.zafarkhaja.semver.VersionTest$CoreFunctionalityTest.shouldProvideIncrementPatchVersionMethod
190,com.github.zafarkhaja.semver.VersionTest$CoreFunctionalityTest.shouldThrowExceptionWhenIncrementingPreReleaseIfItsNull
191,com.github.zafarkhaja.semver.VersionTest$CoreFunctionalityTest.shouldDropBuildMetadataWhenIncrementingPreReleaseVersion
192,com.github.zafarkhaja.semver.VersionTest$CoreFunctionalityTest.mayHavePreReleaseFollowingPatchAppendedWithHyphen
193,com.github.zafarkhaja.semver.VersionTest$CoreFunctionalityTest.shouldBeImmutable
194,com.github.zafarkhaja.semver.VersionTest$CoreFunctionalityTest.shouldDropBuildMetadataWhenIncrementing
195,com.github.zafarkhaja.semver.VersionTest$CoreFunctionalityTest.shouldThrowExceptionWhenIncrementingBuildIfItsNull
196,com.github.zafarkhaja.semver.VersionTest$CoreFunctionalityTest.shouldIncrementMinorVersionWithPreReleaseIfProvided
197,com.github.zafarkhaja.semver.VersionTest$CoreFunctionalityTest.preReleaseShouldHaveLowerPrecedenceThanAssociatedNormal
198,com.github.zafarkhaja.semver.VersionTest$CoreFunctionalityTest.shouldDropBuildMetadataWhenSettingPreReleaseVersion
199,com.github.zafarkhaja.semver.VersionTest$CoreFunctionalityTest.shouldHaveLessThanMethodReturningBoolean
200,com.github.zafarkhaja.semver.VersionTest$CoreFunctionalityTest.shouldCorrectlyCompareAllVersionsFromSpecification
201,com.github.zafarkhaja.semver.VersionTest$CoreFunctionalityTest.shouldProvideIncrementBuildMetadataMethod
202,com.github.zafarkhaja.semver.VersionTest$CoreFunctionalityTest.shouldHaveGreaterThanOrEqualToMethodReturningBoolean
